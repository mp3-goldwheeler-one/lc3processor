-- VHDL Entity ece411.fetch1_fetch2_pipe.interface
--
-- Created:
--          by - goldste6.ews (linux5.ews.illinois.edu)
--          at - 18:24:51 04/18/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY fetch1_fetch2_pipe IS
   PORT( 
      CLK                        : IN     std_logic;
      RESET_L                    : IN     STD_LOGIC;
      fetch1_data_out            : IN     pipe_data;
      fetch2_insert_bubble       : IN     std_logic;
      icache_interstage_data_in  : IN     LC3b_cache_interstage_data;
      load_fetch1_fetch2_pipe    : IN     STD_LOGIC;
      fetch2_data_in             : OUT    pipe_data;
      icache_interstage_data_out : OUT    LC3b_cache_interstage_data;
      read_instr                 : OUT    std_logic
   );

-- Declarations

END fetch1_fetch2_pipe ;

--
-- VHDL Architecture ece411.fetch1_fetch2_pipe.struct
--
-- Created:
--          by - goldste6.ews (linux5.ews.illinois.edu)
--          at - 18:24:52 04/18/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;
LIBRARY mp3lib;

ARCHITECTURE struct OF fetch1_fetch2_pipe IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL fetch2_read : STD_LOGIC;


   -- Component Declarations
   COMPONENT RegCacheInterstageData
   PORT (
      RESET_L : IN     STD_LOGIC ;
      A       : IN     LC3b_cache_interstage_data ;
      EN      : IN     STD_LOGIC ;
      CLK     : IN     std_logic ;
      F       : OUT    LC3b_cache_interstage_data 
   );
   END COMPONENT;
   COMPONENT RegData
   PORT (
      RESET_L : IN     STD_LOGIC ;
      A       : IN     pipe_data ;
      EN      : IN     STD_LOGIC ;
      CLK     : IN     std_logic ;
      F       : OUT    pipe_data 
   );
   END COMPONENT;
   COMPONENT NOT1
   PORT (
      A : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT REG1
   PORT (
      RESET_L : IN     STD_LOGIC ;
      A       : IN     STD_LOGIC ;
      EN      : IN     STD_LOGIC ;
      CLK     : IN     STD_LOGIC ;
      F       : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : NOT1 USE ENTITY mp3lib.NOT1;
   FOR ALL : REG1 USE ENTITY mp3lib.REG1;
   FOR ALL : RegCacheInterstageData USE ENTITY ece411.RegCacheInterstageData;
   FOR ALL : RegData USE ENTITY ece411.RegData;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_0 : RegCacheInterstageData
      PORT MAP (
         RESET_L => RESET_L,
         A       => icache_interstage_data_in,
         EN      => load_fetch1_fetch2_pipe,
         CLK     => CLK,
         F       => icache_interstage_data_out
      );
   aRegData1 : RegData
      PORT MAP (
         RESET_L => RESET_L,
         A       => fetch1_data_out,
         EN      => load_fetch1_fetch2_pipe,
         CLK     => CLK,
         F       => fetch2_data_in
      );
   U_2 : NOT1
      PORT MAP (
         A => fetch2_insert_bubble,
         F => fetch2_read
      );
   U_1 : REG1
      PORT MAP (
         RESET_L => RESET_L,
         A       => fetch2_read,
         EN      => load_fetch1_fetch2_pipe,
         CLK     => CLK,
         F       => read_instr
      );

END struct;
