-- VHDL Entity ece411.decodeStage.interface
--
-- Created:
--          by - wheele11.ews (gelib-057-07.ews.illinois.edu)
--          at - 19:18:59 03/08/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY decodeStage IS
   PORT( 
      CLK             : IN     std_logic;
      RESET_L         : IN     STD_LOGIC;
      decode_instr    : IN     LC3b_word;
      decode_pc       : IN     LC3b_word;
      wb_dest         : IN     LC3B_REG;
      wb_din          : IN     LC3B_WORD;
      wb_regwrite     : IN     STD_LOGIC;
      decode_opcode   : OUT    LC3b_opcode;
      decode_ready    : OUT    std_logic;
      decode_regwrite : OUT    std_logic;
      decode_src_a    : OUT    LC3b_word;
      decode_src_b    : OUT    LC3b_word
   );

-- Declarations

END decodeStage ;

--
-- VHDL Architecture ece411.decodeStage.struct
--
-- Created:
--          by - wheele11.ews (gelib-057-07.ews.illinois.edu)
--          at - 19:18:59 03/08/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;
LIBRARY mp3lib;

ARCHITECTURE struct OF decodeStage IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL R7         : STD_LOGIC_VECTOR(2 DOWNTO 0);
   SIGNAL SrcA       : STD_LOGIC_VECTOR(2 DOWNTO 0);
   SIGNAL SrcAMuxOut : STD_LOGIC_VECTOR(2 DOWNTO 0);
   SIGNAL SrcAMuxSel : STD_LOGIC;
   SIGNAL SrcB       : LC3B_REG;
   SIGNAL bit11      : std_logic;
   SIGNAL bit5       : std_logic;
   SIGNAL dest       : LC3b_reg;
   SIGNAL direction  : std_logic;
   SIGNAL imm4       : LC3b_imm4;
   SIGNAL imm5       : LC3b_imm5;
   SIGNAL index6     : LC3b_index6;
   SIGNAL instr      : LC3b_word;
   SIGNAL offset11   : LC3b_offset11;
   SIGNAL offset9    : LC3b_offset9;
   SIGNAL op_add     : STD_LOGIC;
   SIGNAL op_and     : STD_LOGIC;
   SIGNAL op_br      : STD_LOGIC;
   SIGNAL op_jsr     : STD_LOGIC;
   SIGNAL op_ldb     : STD_LOGIC;
   SIGNAL op_ldi     : STD_LOGIC;
   SIGNAL op_ldr     : STD_LOGIC;
   SIGNAL op_lea     : STD_LOGIC;
   SIGNAL op_not     : STD_LOGIC;
   SIGNAL op_ret     : STD_LOGIC;
   SIGNAL op_shf     : STD_LOGIC;
   SIGNAL op_stb     : STD_LOGIC;
   SIGNAL op_sti     : STD_LOGIC;
   SIGNAL op_str     : STD_LOGIC;
   SIGNAL op_trap    : STD_LOGIC;
   SIGNAL trapvec8   : LC3b_trapvect8;

   -- Implicit buffer signal declarations
   SIGNAL decode_opcode_internal : LC3b_opcode;


   -- Component Declarations
   COMPONENT Dec4_16
   PORT (
      A : IN     STD_LOGIC_VECTOR (3 DOWNTO 0);
      F : OUT    STD_LOGIC_VECTOR (15 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT ID
   PORT (
      decode_instr : IN     LC3b_word ;
      Opcode       : OUT    LC3b_opcode ;
      SrcA         : OUT    LC3b_reg ;
      SrcB         : OUT    LC3b_reg ;
      dest         : OUT    LC3b_reg ;
      index6       : OUT    LC3b_index6 ;
      imm5         : OUT    LC3b_imm5 ;
      bit5         : OUT    std_logic ;
      offset9      : OUT    LC3b_offset9 ;
      trapvec8     : OUT    LC3b_trapvect8 ;
      offset11     : OUT    LC3b_offset11 ;
      bit11        : OUT    std_logic ;
      imm4         : OUT    LC3b_imm4 ;
      direction    : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT MUX2_3
   PORT (
      A   : IN     STD_LOGIC_VECTOR (2 DOWNTO 0);
      B   : IN     STD_LOGIC_VECTOR (2 DOWNTO 0);
      SEL : IN     STD_LOGIC ;
      F   : OUT    STD_LOGIC_VECTOR (2 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT OR3
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      C : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT REGFILE
   PORT (
      CLK      : IN     STD_LOGIC ;
      DEST     : IN     LC3B_REG ;
      DIN      : IN     LC3B_WORD ;
      RESET_L  : IN     STD_LOGIC ;
      REGWRITE : IN     STD_LOGIC ;
      SRCA     : IN     LC3B_REG ;
      SRCB     : IN     LC3B_REG ;
      A        : OUT    LC3B_WORD ;
      B        : OUT    LC3B_WORD 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Dec4_16 USE ENTITY ece411.Dec4_16;
   FOR ALL : ID USE ENTITY ece411.ID;
   FOR ALL : MUX2_3 USE ENTITY mp3lib.MUX2_3;
   FOR ALL : OR3 USE ENTITY mp3lib.OR3;
   FOR ALL : REGFILE USE ENTITY mp3lib.REGFILE;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   op_br   <= instr(0);
   op_add  <= instr(1);
   op_ldb  <= instr(2);
   op_stb  <= instr(3);
   op_jsr  <= instr(4);
   op_and  <= instr(5);
   op_ldr  <= instr(6);
   op_str  <= instr(7);
   -- op_rti
   op_not  <= instr(9);
   op_ldi  <= instr(10);
   op_sti  <= instr(11);
   op_ret  <= instr(12);
   op_shf  <= instr(13);
   op_lea  <= instr(14);
   op_trap <= instr(15);

   -- HDL Embedded Text Block 2 eb2
   SrcAMuxSel <= op_jsr;
   R7 <= "111";

   -- HDL Embedded Text Block 3 eb3
   -- External API
   decode_ready <= '1';


   -- Instance port mappings.
   opcodeDecoder : Dec4_16
      PORT MAP (
         A => decode_opcode_internal,
         F => instr
      );
   IDUnit : ID
      PORT MAP (
         decode_instr => decode_instr,
         Opcode       => decode_opcode_internal,
         SrcA         => SrcA,
         SrcB         => SrcB,
         dest         => dest,
         index6       => index6,
         imm5         => imm5,
         bit5         => bit5,
         offset9      => offset9,
         trapvec8     => trapvec8,
         offset11     => offset11,
         bit11        => bit11,
         imm4         => imm4,
         direction    => direction
      );
   U_0 : MUX2_3
      PORT MAP (
         A   => SrcA,
         B   => R7,
         SEL => SrcAMuxSel,
         F   => SrcAMuxOut
      );
   U_1 : OR3
      PORT MAP (
         A => op_and,
         B => op_add,
         C => op_not,
         F => decode_regwrite
      );
   aRF : REGFILE
      PORT MAP (
         CLK      => CLK,
         DEST     => wb_dest,
         DIN      => wb_din,
         RESET_L  => RESET_L,
         REGWRITE => wb_regwrite,
         SRCA     => SrcAMuxOut,
         SRCB     => SrcB,
         A        => decode_src_a,
         B        => decode_src_b
      );

   -- Implicit buffered output assignments
   decode_opcode <= decode_opcode_internal;

END struct;
