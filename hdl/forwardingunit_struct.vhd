-- VHDL Entity ece411.forwardingUnit.interface
--
-- Created:
--          by - wheele11.ews (linux5.ews.illinois.edu)
--          at - 00:10:57 04/07/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY forwardingUnit IS
   PORT( 
      CLK                    : IN     std_logic;
      decode_control_out     : IN     control_word;
      decode_data_out        : IN     pipe_data;
      decode_uop_control_out : IN     control_word;
      decode_uop_data_out    : IN     pipe_data;
      exec_control           : IN     control_word;
      exec_data_in           : IN     pipe_data;
      mem_control            : IN     control_word;
      mem_data_in            : IN     pipe_data;
      stall_load_use         : IN     std_logic;
      exec_fw_src1_sel       : OUT    LC3b_4mux_sel;
      exec_fw_src2_sel       : OUT    LC3b_4mux_sel;
      mem_fw_sel             : OUT    LC3b_4mux_sel;
      stall_load_use_buffer  : OUT    std_logic
   );

-- Declarations

END forwardingUnit ;

--
-- VHDL Architecture ece411.forwardingUnit.struct
--
-- Created:
--          by - wheele11.ews (linux5.ews.illinois.edu)
--          at - 00:10:57 04/07/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;
LIBRARY mp3lib;

ARCHITECTURE struct OF forwardingUnit IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL F1                             : STD_LOGIC;
   SIGNAL Y3                             : std_logic;
   SIGNAL dec_sr1                        : LC3b_reg;
   SIGNAL dec_sr2                        : LC3b_reg;
   SIGNAL decode_mem_write_byte          : STD_LOGIC;
   SIGNAL decode_mem_write_word          : STD_LOGIC;
   SIGNAL exec_dr                        : LC3b_reg;
   SIGNAL exec_mem_read                  : STD_LOGIC;
   SIGNAL exec_regwrite                  : STD_LOGIC;
   SIGNAL exec_sr2                       : LC3b_reg;
   SIGNAL mem_dr                         : LC3b_reg;
   SIGNAL mem_fw_sel_high                : std_logic;
   SIGNAL mem_mem_read                   : STD_LOGIC;
   SIGNAL mem_regwrite                   : STD_LOGIC;
   SIGNAL sr1_stall_load_use             : std_logic;
   SIGNAL sr2_stall_load_use             : std_logic;
   SIGNAL stall_load_use_local_generated : std_logic;


   -- Component Declarations
   COMPONENT Comparator
   GENERIC (
      N     : Integer;
      Delay : time
   );
   PORT (
      A : IN     std_logic_vector (N-1 DOWNTO 0);
      B : IN     std_logic_vector (N-1 DOWNTO 0);
      Y : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT ExecForwardDetect
   PORT (
      dec_sr                : IN     LC3b_reg ;
      decode_mem_write_byte : IN     STD_LOGIC ;
      decode_mem_write_word : IN     STD_LOGIC ;
      exec_dr               : IN     LC3b_reg ;
      exec_mem_read         : IN     STD_LOGIC ;
      exec_regwrite         : IN     STD_LOGIC ;
      mem_dr                : IN     LC3b_reg ;
      mem_mem_read          : IN     STD_LOGIC ;
      mem_regwrite          : IN     STD_LOGIC ;
      exec_fw_sr_sel        : OUT    LC3b_4mux_sel ;
      stall_load_use        : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT AND2
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT NOT1
   PORT (
      A : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT OR2
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : AND2 USE ENTITY mp3lib.AND2;
   FOR ALL : Comparator USE ENTITY ece411.Comparator;
   FOR ALL : ExecForwardDetect USE ENTITY ece411.ExecForwardDetect;
   FOR ALL : NOT1 USE ENTITY mp3lib.NOT1;
   FOR ALL : OR2 USE ENTITY mp3lib.OR2;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   dec_sr1 <= decode_data_out.sr1;
   dec_sr2 <= decode_data_out.sr2;
   
   exec_dr <= exec_data_in.dr;
   exec_sr2 <= exec_data_in.sr2;
   mem_dr  <= mem_data_in.dr;
   
   exec_mem_read <= exec_control.mem.mem_read;
   exec_regwrite <= exec_control.wb.regwrite;
   mem_mem_read  <= mem_control.mem.mem_read;
   mem_regwrite  <= mem_control.wb.regwrite;
   
   decode_mem_write_byte <= decode_control_out.mem.mem_write_byte;
   decode_mem_write_word <= decode_control_out.mem.mem_write_word;

   -- HDL Embedded Text Block 2 eb2
   mem_fw_sel <= mem_fw_sel_high & mem_mem_read;


   -- Instance port mappings.
   U_5 : Comparator
      GENERIC MAP (
         N     => 4,
         Delay => DELAY_COMPARE8
      )
      PORT MAP (
         A => exec_sr2,
         B => mem_dr,
         Y => Y3
      );
   Sr1ExecDetect : ExecForwardDetect
      PORT MAP (
         dec_sr                => dec_sr1,
         decode_mem_write_byte => decode_mem_write_byte,
         decode_mem_write_word => decode_mem_write_word,
         exec_dr               => exec_dr,
         exec_mem_read         => exec_mem_read,
         exec_regwrite         => exec_regwrite,
         mem_dr                => mem_dr,
         mem_mem_read          => mem_mem_read,
         mem_regwrite          => mem_regwrite,
         exec_fw_sr_sel        => exec_fw_src1_sel,
         stall_load_use        => sr1_stall_load_use
      );
   Sr2ExecDetect : ExecForwardDetect
      PORT MAP (
         dec_sr                => dec_sr2,
         decode_mem_write_byte => decode_mem_write_byte,
         decode_mem_write_word => decode_mem_write_word,
         exec_dr               => exec_dr,
         exec_mem_read         => exec_mem_read,
         exec_regwrite         => exec_regwrite,
         mem_dr                => mem_dr,
         mem_mem_read          => mem_mem_read,
         mem_regwrite          => mem_regwrite,
         exec_fw_sr_sel        => exec_fw_src2_sel,
         stall_load_use        => sr2_stall_load_use
      );
   U_3 : AND2
      PORT MAP (
         A => stall_load_use_local_generated,
         B => F1,
         F => stall_load_use_buffer
      );
   U_6 : AND2
      PORT MAP (
         A => Y3,
         B => mem_regwrite,
         F => mem_fw_sel_high
      );
   U_1 : NOT1
      PORT MAP (
         A => stall_load_use,
         F => F1
      );
   U_0 : OR2
      PORT MAP (
         A => sr1_stall_load_use,
         B => sr2_stall_load_use,
         F => stall_load_use_local_generated
      );

END struct;
