-- VHDL Entity ece411.forwardingUnit.interface
--
-- Created:
--          by - wheele11.ews (gelib-057-35.ews.illinois.edu)
--          at - 22:22:17 03/28/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY forwardingUnit IS
   PORT( 
      CLK                : IN     std_logic;
      decode_control_out : IN     control_word;
      decode_data_out    : IN     pipe_data;
      exec_control       : IN     control_word;
      exec_data_in       : IN     pipe_data;
      mem_control        : IN     control_word;
      mem_data_in        : IN     pipe_data;
      exec_fw_src1_sel   : OUT    LC3b_4mux_sel;
      exec_fw_src2_sel   : OUT    LC3b_4mux_sel;
      mem_fw_sr2_sel     : OUT    LC3b_4mux_sel
   );

-- Declarations

END forwardingUnit ;

--
-- VHDL Architecture ece411.forwardingUnit.struct
--
-- Created:
--          by - wheele11.ews (gelib-057-35.ews.illinois.edu)
--          at - 22:22:17 03/28/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;
LIBRARY mp3lib;

ARCHITECTURE struct OF forwardingUnit IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL B              : STD_LOGIC;
   SIGNAL F2             : STD_LOGIC;
   SIGNAL Y2             : std_logic;
   SIGNAL dec_sr1        : LC3b_reg;
   SIGNAL dec_sr2        : LC3b_reg;
   SIGNAL exec_dr        : LC3b_reg;
   SIGNAL exec_mem_read  : STD_LOGIC;
   SIGNAL exec_regwrite  : STD_LOGIC;
   SIGNAL mem_control_in : mem_control_word;
   SIGNAL mem_dr         : LC3b_reg;
   SIGNAL mem_mem_read   : STD_LOGIC;
   SIGNAL mem_regwrite   : STD_LOGIC;
   SIGNAL stall_load_use : std_logic;


   -- Component Declarations
   COMPONENT Comparator
   GENERIC (
      N     : Integer;
      Delay : time
   );
   PORT (
      A : IN     std_logic_vector (N-1 DOWNTO 0);
      B : IN     std_logic_vector (N-1 DOWNTO 0);
      Y : OUT    std_logic
   );
   END COMPONENT;
   COMPONENT ExecForwardDetect
   PORT (
      dec_sr         : IN     LC3b_reg ;
      exec_dr        : IN     LC3b_reg ;
      exec_mem_read  : IN     STD_LOGIC ;
      exec_regwrite  : IN     STD_LOGIC ;
      mem_dr         : IN     LC3b_reg ;
      mem_mem_read   : IN     STD_LOGIC ;
      mem_regwrite   : IN     STD_LOGIC ;
      exec_fw_sr_sel : OUT    LC3b_4mux_sel ;
      stall_load_use : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT AND2
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : AND2 USE ENTITY mp3lib.AND2;
   FOR ALL : Comparator USE ENTITY ece411.Comparator;
   FOR ALL : ExecForwardDetect USE ENTITY ece411.ExecForwardDetect;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   dec_sr1 <= decode_data_out.sr1;
   dec_sr2 <= decode_data_out.sr2;
   
   exec_dr <= exec_data_in.dr;
   mem_dr  <= mem_data_in.dr;
   
   exec_mem_read <= exec_control.mem.mem_read;
   exec_regwrite <= exec_control.wb.regwrite;
   mem_mem_read  <= mem_control.mem.mem_read;
   mem_regwrite  <= mem_control.wb.regwrite;


   -- Instance port mappings.
   U_2 : Comparator
      GENERIC MAP (
         N     => 3,
         Delay => DELAY_COMPARE8
      )
      PORT MAP (
         A => dec_sr2,
         B => mem_dr,
         Y => Y2
      );
   Sr1ExecDetect : ExecForwardDetect
      PORT MAP (
         dec_sr         => dec_sr1,
         exec_dr        => exec_dr,
         exec_mem_read  => exec_mem_read,
         exec_regwrite  => exec_regwrite,
         mem_dr         => mem_dr,
         mem_mem_read   => mem_mem_read,
         mem_regwrite   => mem_regwrite,
         exec_fw_sr_sel => exec_fw_src1_sel,
         stall_load_use => stall_load_use
      );
   Sr2ExecDetect : ExecForwardDetect
      PORT MAP (
         dec_sr         => dec_sr2,
         exec_dr        => exec_dr,
         exec_mem_read  => exec_mem_read,
         exec_regwrite  => exec_regwrite,
         mem_dr         => mem_dr,
         mem_mem_read   => mem_mem_read,
         mem_regwrite   => mem_regwrite,
         exec_fw_sr_sel => exec_fw_src2_sel,
         stall_load_use => stall_load_use
      );
   U_4 : AND2
      PORT MAP (
         A => Y2,
         B => B,
         F => F2
      );

END struct;
