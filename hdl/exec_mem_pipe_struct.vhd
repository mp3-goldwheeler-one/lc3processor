-- VHDL Entity ece411.exec_mem_pipe.interface
--
-- Created:
--          by - wheele11.ews (gelib-057-03.ews.illinois.edu)
--          at - 20:44:03 03/14/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY exec_mem_pipe IS
   PORT( 
      CLK                : IN     std_logic;
      RESET_L            : IN     STD_LOGIC;
      exec_alumux_sel    : IN     LC3b_4mux_sel;
      exec_aluop         : IN     LC3B_ALUOP;
      exec_aluout        : IN     LC3B_WORD;
      exec_dr            : IN     LC3B_REG;
      exec_instr         : IN     LC3b_word;
      exec_load_jump_pc  : IN     STD_LOGIC;
      exec_opcode        : IN     LC3b_opcode;
      exec_pc            : IN     LC3b_word;
      exec_read          : IN     std_logic;
      exec_regwrite      : IN     STD_LOGIC;
      exec_set_cc        : IN     std_logic;
      exec_shift_imm     : IN     STD_LOGIC;
      exec_src_a         : IN     LC3b_word;
      exec_src_b         : IN     LC3b_word;
      exec_use_offset11  : IN     std_logic;
      exec_use_pc_adder  : IN     std_logic;
      exec_write_byte    : IN     std_logic;
      exec_write_word    : IN     std_logic;
      load_exec_mem_pipe : IN     STD_LOGIC;
      mem_aluout         : OUT    LC3B_WORD;
      mem_dr             : OUT    LC3B_REG;
      mem_instr          : OUT    LC3b_word;
      mem_opcode         : OUT    LC3b_opcode;
      mem_pc             : OUT    LC3b_word;
      mem_read           : OUT    std_logic;
      mem_regwrite       : OUT    STD_LOGIC;
      mem_set_cc         : OUT    std_logic;
      mem_src_a          : OUT    LC3b_word;
      mem_src_b          : OUT    LC3b_word;
      mem_write_byte     : OUT    std_logic;
      mem_write_word     : OUT    std_logic
   );

-- Declarations

END exec_mem_pipe ;

--
-- VHDL Architecture ece411.exec_mem_pipe.struct
--
-- Created:
--          by - wheele11.ews (gelib-057-03.ews.illinois.edu)
--          at - 20:44:03 03/14/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY mp3lib;

ARCHITECTURE struct OF exec_mem_pipe IS

   -- Architecture declarations

   -- Internal signal declarations


   -- Component Declarations
   COMPONENT REG1
   PORT (
      RESET_L : IN     STD_LOGIC ;
      A       : IN     STD_LOGIC ;
      EN      : IN     STD_LOGIC ;
      CLK     : IN     STD_LOGIC ;
      F       : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT REG16
   PORT (
      RESET_L : IN     STD_LOGIC ;
      A       : IN     STD_LOGIC_VECTOR (15 DOWNTO 0);
      EN      : IN     STD_LOGIC ;
      CLK     : IN     STD_LOGIC ;
      F       : OUT    STD_LOGIC_VECTOR (15 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT REG3
   PORT (
      RESET_L : IN     STD_LOGIC ;
      A       : IN     STD_LOGIC_VECTOR (2 DOWNTO 0);
      EN      : IN     STD_LOGIC ;
      CLK     : IN     STD_LOGIC ;
      F       : OUT    STD_LOGIC_VECTOR (2 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT REG4
   PORT (
      RESET_L : IN     STD_LOGIC ;
      A       : IN     STD_LOGIC_VECTOR (3 DOWNTO 0);
      EN      : IN     STD_LOGIC ;
      CLK     : IN     STD_LOGIC ;
      F       : OUT    STD_LOGIC_VECTOR (3 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : REG1 USE ENTITY mp3lib.REG1;
   FOR ALL : REG16 USE ENTITY mp3lib.REG16;
   FOR ALL : REG3 USE ENTITY mp3lib.REG3;
   FOR ALL : REG4 USE ENTITY mp3lib.REG4;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_5 : REG1
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_regwrite,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_regwrite
      );
   U_7 : REG1
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_set_cc,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_set_cc
      );
   U_8 : REG1
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_read,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_read
      );
   U_11 : REG1
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_write_word,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_write_word
      );
   U_12 : REG1
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_write_byte,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_write_byte
      );
   U_0 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_src_a,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_src_a
      );
   U_1 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_src_b,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_src_b
      );
   U_2 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_pc,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_pc
      );
   U_3 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_instr,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_instr
      );
   U_10 : REG16
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_aluout,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_aluout
      );
   U_6 : REG3
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_dr,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_dr
      );
   U_4 : REG4
      PORT MAP (
         RESET_L => RESET_L,
         A       => exec_opcode,
         EN      => load_exec_mem_pipe,
         CLK     => CLK,
         F       => mem_opcode
      );

END struct;
