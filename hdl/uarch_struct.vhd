-- VHDL Entity ece411.uarch.interface
--
-- Created:
--          by - goldste6.ews (evrt-252-29.ews.illinois.edu)
--          at - 23:52:56 04/18/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY uarch IS
   PORT( 
      CLK                   : IN     std_logic;
      decode_control_out    : IN     control_word;
      decode_data_out       : IN     pipe_data;
      uarch_stall_in        : IN     std_logic;
      uop_instr_dr          : IN     LC3b_reg;
      uop_sr2               : IN     LC3b_reg;
      uop_sr2_val           : IN     lc3b_word;
      uarch_control_out     : OUT    control_word;
      uarch_data_out        : OUT    pipe_data;
      uarch_sel_out         : OUT    STD_LOGIC;
      uarch_stall_in_buffer : OUT    std_logic
   );

-- Declarations

END uarch ;

--
-- VHDL Architecture ece411.uarch.struct
--
-- Created:
--          by - goldste6.ews (evrt-252-29.ews.illinois.edu)
--          at - 23:52:56 04/18/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;
LIBRARY mp3lib;

ARCHITECTURE struct OF uarch IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL F            : STD_LOGIC;
   SIGNAL aluout       : lc3b_word;
   SIGNAL btb_data     : btb_line;
   SIGNAL cc           : lc3b_cc;
   SIGNAL default_data : pipe_data;
   SIGNAL dr_val       : lc3b_word;
   SIGNAL idx          : uop_rom_sel;
   SIGNAL idx6         : LC3B_INDEX6;
   SIGNAL imm4         : LC3B_IMM4;
   SIGNAL imm5         : LC3B_IMM5;
   SIGNAL incr_pc      : lc3b_word;
   SIGNAL instr        : lc3b_word;
   SIGNAL mem_data_in  : lc3b_word;
   SIGNAL nzp          : LC3B_cc;
   SIGNAL off11        : LC3B_OFFSET11;
   SIGNAL off9         : LC3B_OFFSET9;
   SIGNAL pc           : lc3b_word;
   SIGNAL sr1          : LC3b_reg;
   SIGNAL sr1_val      : lc3b_word;
   SIGNAL taken        : std_logic;
   SIGNAL target_pc    : LC3B_word;
   SIGNAL trapvect8    : LC3B_TRAPVECT8;
   SIGNAL wb_data      : LC3B_word;

   -- Implicit buffer signal declarations
   SIGNAL uarch_sel_out_internal : STD_LOGIC;


   -- Component Declarations
   COMPONENT PipeDataCombiner
   PORT (
      pc          : IN     lc3b_word ;
      incr_pc     : IN     lc3b_word ;
      instr       : IN     lc3b_word ;
      aluout      : IN     lc3b_word ;
      dr          : IN     LC3b_reg ;
      dr_val      : IN     lc3b_word ;
      idx6        : IN     LC3B_INDEX6 ;
      imm4        : IN     LC3b_imm4 ;
      imm5        : IN     LC3b_imm5 ;
      mem_data_in : IN     lc3b_word ;
      off11       : IN     LC3B_OFFSET11 ;
      off9        : IN     LC3B_OFFSET9 ;
      sr1         : IN     LC3b_reg ;
      sr2         : IN     LC3b_reg ;
      sr1_val     : IN     lc3b_word ;
      sr2_val     : IN     lc3b_word ;
      trapvect8   : IN     lc3b_trapvect8 ;
      nzp         : IN     lc3b_cc ;
      cc          : IN     lc3b_cc ;
      target_pc   : IN     lc3b_word ;
      taken       : IN     std_logic ;
      btb_data    : IN     btb_line ;
      wb_data     : IN     lc3b_word ;
      data_out    : OUT    pipe_data 
   );
   END COMPONENT;
   COMPONENT PipeDataSplitter
   PORT (
      data_in     : IN     pipe_data ;
      pc          : OUT    lc3b_word ;
      incr_pc     : OUT    lc3b_word ;
      instr       : OUT    lc3b_word ;
      aluout      : OUT    lc3b_word ;
      mem_data_in : OUT    lc3b_word ;
      sr1         : OUT    lc3b_reg ;
      sr2         : OUT    lc3b_reg ;
      sr1_val     : OUT    lc3b_word ;
      sr2_val     : OUT    lc3b_word ;
      dr_val      : OUT    lc3b_word ;
      dr          : OUT    lc3b_reg ;
      imm4        : OUT    LC3B_IMM4 ;
      imm5        : OUT    LC3B_IMM5 ;
      idx6        : OUT    LC3B_INDEX6 ;
      off9        : OUT    LC3B_OFFSET9 ;
      off11       : OUT    LC3B_OFFSET11 ;
      trapvect8   : OUT    LC3B_TRAPVECT8 ;
      nzp         : OUT    LC3B_cc ;
      cc          : OUT    LC3B_cc ;
      target_pc   : OUT    LC3B_word ;
      taken       : OUT    std_logic ;
      wb_data     : OUT    LC3B_word ;
      btb_data    : OUT    btb_line 
   );
   END COMPONENT;
   COMPONENT UOp_ROM
   PORT (
      idx       : IN     uop_rom_sel ;
      ctrl_word : OUT    control_word 
   );
   END COMPONENT;
   COMPONENT AND2
   PORT (
      A : IN     STD_LOGIC ;
      B : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;
   COMPONENT NOT1
   PORT (
      A : IN     STD_LOGIC ;
      F : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : AND2 USE ENTITY mp3lib.AND2;
   FOR ALL : NOT1 USE ENTITY mp3lib.NOT1;
   FOR ALL : PipeDataCombiner USE ENTITY ece411.PipeDataCombiner;
   FOR ALL : PipeDataSplitter USE ENTITY ece411.PipeDataSplitter;
   FOR ALL : UOp_ROM USE ENTITY ece411.UOp_ROM;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   idx <= decode_control_out.dec.uop_rom_idx;
   uarch_sel_out_internal <= decode_control_out.dec.use_uop2;
   
   default_data <= default_pipe_data;

   -- HDL Embedded Text Block 2 eb2
   sr1  <= "1000";
   idx6 <= "000000";
   cc   <= decode_data_out.cc;


   -- Instance port mappings.
   U_2 : PipeDataCombiner
      PORT MAP (
         pc          => pc,
         incr_pc     => incr_pc,
         instr       => instr,
         aluout      => aluout,
         dr          => uop_instr_dr,
         dr_val      => dr_val,
         idx6        => idx6,
         imm4        => imm4,
         imm5        => imm5,
         mem_data_in => mem_data_in,
         off11       => off11,
         off9        => off9,
         sr1         => sr1,
         sr2         => uop_sr2,
         sr1_val     => sr1_val,
         sr2_val     => uop_sr2_val,
         trapvect8   => trapvect8,
         nzp         => nzp,
         cc          => cc,
         target_pc   => target_pc,
         taken       => taken,
         btb_data    => btb_data,
         wb_data     => wb_data,
         data_out    => uarch_data_out
      );
   U_1 : PipeDataSplitter
      PORT MAP (
         data_in     => default_data,
         pc          => pc,
         incr_pc     => incr_pc,
         instr       => instr,
         aluout      => aluout,
         mem_data_in => mem_data_in,
         sr1         => OPEN,
         sr2         => OPEN,
         sr1_val     => sr1_val,
         sr2_val     => OPEN,
         dr_val      => dr_val,
         dr          => OPEN,
         imm4        => imm4,
         imm5        => imm5,
         idx6        => OPEN,
         off9        => off9,
         off11       => off11,
         trapvect8   => trapvect8,
         nzp         => nzp,
         cc          => OPEN,
         target_pc   => target_pc,
         taken       => taken,
         wb_data     => wb_data,
         btb_data    => btb_data
      );
   U_0 : UOp_ROM
      PORT MAP (
         idx       => idx,
         ctrl_word => uarch_control_out
      );
   U_3 : AND2
      PORT MAP (
         A => uarch_sel_out_internal,
         B => F,
         F => uarch_stall_in_buffer
      );
   U_4 : NOT1
      PORT MAP (
         A => uarch_stall_in,
         F => F
      );

   -- Implicit buffered output assignments
   uarch_sel_out <= uarch_sel_out_internal;

END struct;
