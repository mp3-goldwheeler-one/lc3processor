-- VHDL Entity ece411.Pipelined_L1_Stage1.symbol
--
-- Created:
--          by - goldste6.ews (gelib-057-19.ews.illinois.edu)
--          at - 02:11:48 04/16/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY Pipelined_L1_Stage1 IS
   PORT( 
      ADDRESS     : IN     LC3B_WORD;
      CLK         : IN     std_logic;
      LRU_data_in : IN     std_logic;
      MREAD_L     : IN     std_logic;
      MRESP_H     : IN     std_logic;
      MWRITEH_L   : IN     std_logic;
      MWRITEL_L   : IN     std_logic;
      RESET_L     : IN     std_logic;
      Set_Dirty   : IN     std_logic;
      WayDataIn   : IN     LC3b_OWORD;
      WriteIndex  : IN     LC3b_c_index;
      WriteTag    : IN     LC3b_c_tag;
      write0      : IN     std_logic;
      write1      : IN     std_logic;
      ReadOffset  : OUT    std_logic_vector (2 DOWNTO 0);
      ReadTag     : OUT    std_logic_vector (8 DOWNTO 0);
      Way0Dataout : OUT    LC3B_WORD;
      Way1Dataout : OUT    LC3B_WORD;
      dirty0      : OUT    std_logic;
      dirty1      : OUT    std_logic;
      evicted     : OUT    std_logic;
      tag0        : OUT    LC3b_C_TAG;
      tag1        : OUT    LC3b_C_TAG;
      valid0      : OUT    std_logic;
      valid1      : OUT    std_logic;
      ReadIndex   : BUFFER lc3b_c_index
   );

-- Declarations

END Pipelined_L1_Stage1 ;

--
-- VHDL Architecture ece411.Pipelined_L1_Stage1.struct
--
-- Created:
--          by - goldste6.ews (gelib-057-19.ews.illinois.edu)
--          at - 02:11:48 04/16/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;

ARCHITECTURE struct OF Pipelined_L1_Stage1 IS

   -- Architecture declarations

   -- Internal signal declarations


   -- Component Declarations
   COMPONENT Bit_Array_RW
   PORT (
      RESET_L    : IN     std_logic ;
      DataWrite  : IN     std_logic ;
      ReadIndex  : IN     LC3b_C_INDEX ;
      WriteIndex : IN     LC3B_C_INDEX ;
      DataIn     : IN     std_logic ;
      DataOut    : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT L1Way
   PORT (
      DataWrite  : IN     std_logic ;
      RESET_L    : IN     std_logic ;
      ReadIndex  : IN     lc3b_c_index ;
      Set_Dirty  : IN     std_logic ;
      WayDataIn  : IN     LC3b_OWORD ;
      WriteIndex : IN     LC3b_c_index ;
      WriteTag   : IN     LC3b_c_tag ;
      Dirty      : OUT    std_logic ;
      TagOut     : OUT    LC3b_C_TAG ;
      Valid      : OUT    std_logic ;
      WayDataout : OUT    LC3B_WORD 
   );
   END COMPONENT;
   COMPONENT Splitter
   PORT (
      Address : IN     LC3b_word ;
      Tag     : OUT    std_logic_vector (8 DOWNTO 0);
      Index   : OUT    lc3b_c_index ;
      Offset  : OUT    std_logic_vector (2 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Bit_Array_RW USE ENTITY ece411.Bit_Array_RW;
   FOR ALL : L1Way USE ENTITY ece411.L1Way;
   FOR ALL : Splitter USE ENTITY ece411.Splitter;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   LRU : Bit_Array_RW
      PORT MAP (
         RESET_L    => RESET_L,
         DataWrite  => MRESP_H,
         ReadIndex  => ReadIndex,
         WriteIndex => WriteIndex,
         DataIn     => LRU_data_in,
         DataOut    => evicted
      );
   Way0 : L1Way
      PORT MAP (
         DataWrite  => write0,
         RESET_L    => RESET_L,
         ReadIndex  => ReadIndex,
         Set_Dirty  => Set_Dirty,
         WayDataIn  => WayDataIn,
         WriteIndex => WriteIndex,
         WriteTag   => WriteTag,
         Dirty      => dirty0,
         TagOut     => tag0,
         Valid      => valid0,
         WayDataout => Way0Dataout
      );
   Way1 : L1Way
      PORT MAP (
         DataWrite  => write1,
         RESET_L    => RESET_L,
         ReadIndex  => ReadIndex,
         Set_Dirty  => Set_Dirty,
         WayDataIn  => WayDataIn,
         WriteIndex => WriteIndex,
         WriteTag   => WriteTag,
         Dirty      => dirty1,
         TagOut     => tag1,
         Valid      => valid1,
         WayDataout => Way1Dataout
      );
   aSplitter : Splitter
      PORT MAP (
         Address => ADDRESS,
         Tag     => ReadTag,
         Index   => ReadIndex,
         Offset  => ReadOffset
      );

END struct;
